- hosts: azure_agents

  tasks:

    - name: Install tools
      ansible.builtin.apt:
        name:
          - wget
          - ncat
          - git
          - tree
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: true
      become: true

    - name: Ensure {{ azure_agent_path }} exists
      ansible.builtin.file:
        path: "{{ azure_agent_path }}"
        state: directory
        mode: "0755"

    - name: Download the Azure agent
      ansible.builtin.get_url:
        url: "https://download.agent.dev.azure.com/agent/{{ azure_agent_version }}/vsts-agent-linux-x64-{{ azure_agent_version }}.tar.gz"
        dest: "{{ downloads_directory }}/vsts-agent-linux-x64-{{ azure_agent_version }}.tar.gz"
        mode: "0644"
      register: download_agent

    - name: Extract the Azure agent
      ansible.builtin.unarchive:
        src: "{{ downloads_directory }}/vsts-agent-linux-x64-{{ azure_agent_version }}.tar.gz"
        dest: "{{ azure_agent_path }}"
        remote_src: yes
      when: download_agent.changed

    - name: Configure the agent
      ansible.builtin.shell: |
        cd /data/azure_agent
        ./config.sh --unattended --url https://dev.azure.com/lesterguerzon --auth pat --token {{ azure_path_gce_agent }} --pool GCE_AGENT --agent node1 --acceptTeeEula
      args:
        creates: /data/azure_agent/.agent
      notify: Restart the agent

    - name: Ensure the service is installed
      ansible.builtin.shell: |
        cd /data/azure_agent
        sudo ./svc.sh install
      failed_when: false

    - name: Ensure the service is started
      ansible.builtin.shell: |
        cd /data/azure_agent
        sudo ./svc.sh start

    - name: Create the tools directory
      ansible.builtin.file:
        path: "{{ tools_directory }}"
        state: directory
        mode: "0755"

    ##### Java #####

    - name: Install necessary packages
      ansible.builtin.apt:
        name:
          - maven
          - openjdk-11-jdk
          - openjdk-21-jdk
        state: present
        update_cache: true
      become: true

    ##### Docker #####

    - name: Cleanup conflicting packages
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
          - runc
        state: absent
      become: true

    - name: Install the APT key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true
    - name: Configure the repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu noble stable"
        state: present
      become: true

    - name: Install the Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      become: true

    - name: Add guerzonix user to the docker group
      ansible.builtin.user:
        name: guerzonix
        groups: docker
        append: true
      become: true

    - meta: end_play

    ##### Python #####

    - name: Download Python releases
      ansible.builtin.get_url:
        url: "{{ item.value }}"
        dest: "{{ downloads_directory }}"
      loop: "{{ python_releases_url | dict2items }}"
      register: download_python

    - name: Create the Python tools directories
      ansible.builtin.file:
        path: "{{ python_tools_directory }}/{{ item.key }}/x64"
        state: directory
        mode: "0755"
        recurse: yes
      loop: "{{ python_releases_url | dict2items }}"

    - name: Extract the Python releases
      ansible.builtin.unarchive:
        src: "{{ downloads_directory }}/python-{{ item.key }}-linux-24.04-x64.tar.gz"
        dest: "{{ python_tools_directory }}/{{ item.key }}/x64/"
        remote_src: yes
      loop: "{{ python_releases_url | dict2items }}"
      when: download_python.changed

    - name: Create the x64.complete file
      ansible.builtin.file:
        path: "{{ python_tools_directory }}/{{ item.key }}/x64.complete"
        state: touch
      loop: "{{ python_releases_url | dict2items }}"

  handlers:

    - name: Restart the agent
      ansible.builtin.shell: |
        cd /data/azure_agent
        sudo ./svc.sh restart

  vars:

    azure_agent_path: "/data/azure_agent"
    azure_agent_version: "4.260.0"
    downloads_directory: "/data/downloads"
    tools_directory: "{{ azure_agent_path }}/_work/_tool"
    python_tools_directory: "{{ tools_directory }}/Python"
    python_releases_url:
      "3.13.7": "https://github.com/actions/python-versions/releases/download/3.13.7-16980743123/python-3.13.7-linux-24.04-x64.tar.gz"
      "3.12.11": "https://github.com/actions/python-versions/releases/download/3.12.11-15433310049/python-3.12.11-linux-24.04-x64.tar.gz"
      "3.11.13": "https://github.com/actions/python-versions/releases/download/3.11.13-15433298024/python-3.11.13-linux-24.04-x64.tar.gz"
    azure_path_gce_agent: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      32343539363665326162356438396238353435653133353466363033653533333261646534636639
      3638613739346138623863356137383661303864396339630a393731653331303266643530366564
      66326238313662306432663635373431393934386332323239663863363263666235636639306332
      6465646134616334370a613863386133376461333265636638626531366664353735333665303635
      63623731633338623963623766613039646264616536356565646263326438383734353335643265
      34323361363363663031306231333734616661633831326562376338353263626634383438613537
      63623131623664333632313966646636343237306138333265336161326365303436333231306436
      62666362623338643434316630663734653161636635623134363534623461383430656665613739
      3532
